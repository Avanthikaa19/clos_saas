.queue-component-container {
    height: 100%;
    width: 100%;
    overflow: hidden;
    font-size: 14px;
    > .inner-container {
      height: 100%; 
      width: 100%; 
      position: relative;
      > .reprocess-btn {
        opacity: 0.2;
        position: absolute;
        left: 50%;
        bottom: 50px;
        transform: translate(-50%, -50%);
        color: white;
        background-color: crimson;
        transition: all linear 150ms;
        span {
          padding-left: 5px;
        }
      }
      > .reprocess-btn:hover {
        opacity: 1;
      }
    }
}

.filter-container {
    height: 45px;
    max-height: 45px;
    box-sizing: border-box;
    padding: 5px 10px 5px 10px;
    display: table;
    width: 100%;
    > .filter-vert-middle {
        display: table-cell;
        vertical-align: middle;
    }
}

.min-label {
    padding: 0 10px 0 10px;
}

.min-input {
    background-color: whitesmoke;
    box-sizing: border-box;
    border: solid transparent 1px;
    border-radius: 3px;
    transition: all linear 100ms;
    margin-left: 5px;
}
.min-input:hover {
    border: solid rgb(218, 218, 218) 1px;
}
.min-input:disabled {
    opacity: 0.5;
}
.min-input:focus {
    border: solid silver 1px;
}

.min-select {
    background-color: whitesmoke;
    padding-left: 2px;
    min-height: 24px;
    line-height: 24px;
    border-radius: 3px;
    border: solid transparent 1px;
    transition: all linear 100ms;
}
.min-select:hover {
    border: solid rgb(218, 218, 218) 1px;
}
.min-select:focus {
    border: solid silver 1px;
}

.mid-tab-card {
    padding-left: 50px;
    padding-right: 50px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    align-items: center;
    min-width: 250px;
    max-width: 80%;
    max-height: 30%;
    display: flex;
    overflow: auto;
    > .spinner {
      > mat-icon {
        font-size: 22px;
        padding-top: 4px;
        padding-left: 2px;
      }
    }
    > .text {
      width: 100%;
      margin-left: 10px;
      font-size: 13px;
      text-align: justify;
      text-align-last: center;
    }
}

.bot-tab-card {
    padding-left: 10px;
    padding-right: 10px;
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    align-items: center;
    min-width: 100px;
    max-width: 80%;
    max-height: 30px;
    display: flex;
    overflow: hidden;
    background: rgba(255, 255, 255);
    opacity: 0.6;
    transition: all linear 100ms;
    > .text {
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        font-size: 13px;
        text-align: justify;
        text-align-last: center;
    }
}

.opaque-on-hover:hover {
    opacity: 1;
}

.noselect {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

table,
td,
a {
  color: #000;
  font: normal normal 12px Verdana, Geneva, Arial, Helvetica, sans-serif;
}

tr,
td,
a {
  font-family: monospace, monospace;
  font-size: 13px;
  transition: all 0.1s ease;
}

tr {
  height: 26px;
}

th,
td {
  white-space: nowrap;
  height: 24px;
}

/* Reset overflow value to hidden for all non-IE browsers. */
html > body div.tableContainer {
  overflow: hidden;
  width: 100%;
}

/* define width of table. IE browsers only                 */
div.tableContainer table {
  float: left;
  width: 100%;
}

/* define width of table. Add 16px to width for scrollbar.           */
/* All other non-IE browsers.                                        */
html > body div.tableContainer table {
  width: 100%;
}

/* set table header to a fixed position. WinIE 6.x only                                       */
/* In WinIE 6.x, any element with a position property set to relative and is a child of       */
/* an element that has an overflow property set, the relative value translates into fixed.    */
/* Ex: parent element DIV with a class of tableContainer has an overflow property set to auto */
thead.fixedHeader tr {
  position: relative;
}

/* set THEAD element to have block level attributes. All other non-IE browsers            */
/* this enables overflow to work on TBODY element. All other non-IE, non-Mozilla browsers */
html > body thead.fixedHeader tr {
  display: block;
}

/* make the TH elements pretty */
thead.fixedHeader th {
  background: rgb(100, 100, 100);
  border-left: 1px solid rgb(194, 194, 194);
  border-right: 1px solid rgb(170, 170, 170);
  border-top: 1px solid rgb(194, 194, 194);
  font-weight: normal;
  padding: 4px 3px;
  text-align: left;
  position: sticky;
  top: 0;
  z-index: 9;
}

thead.fixedHeader a {
  text-align: center;
  color: #fff;
  display: block;
  width: 100%;
}

/* define the table content to be scrollable                                              */
/* set TBODY element to have block level attributes. All other non-IE browsers            */
/* this enables overflow to work on TBODY element. All other non-IE, non-Mozilla browsers */
/* induced side effect is that child TDs no longer accept width: auto                     */
html > body tbody.scrollContent {
  display: block;
  height: 262px;
  overflow: auto;
  width: 100%;
}

/* make TD elements pretty. Provide alternating classes for striping the table */
/* http://www.alistapart.com/articles/zebratables/                             */
tbody.scrollContent td,
tbody.scrollContent tr td {
  text-align: left;
  background: #fff;
  border-bottom: 1px solid #ddd;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  border-top: 1px solid #ddd;
  padding: 2px 3px 3px 4px;
  color: black;
  text-shadow: 1px 4px 5px #aba8a88e;
  .cancelled-deals {
    color: rgb(150, 150, 150);
    text-shadow: none;
  }
}

tbody.scrollContent tr:nth-child(even) td {
  background: #eee;
  border-bottom: 1px solid #ddd;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  border-top: 1px solid #ddd;
  padding: 2px 3px 3px 4px;
  color: black;
  text-shadow: 1px 4px 5px #aba8a88e;
  .cancelled-deals {
    color: rgb(150, 150, 150);
    text-shadow: none;
  }
}

tbody.scrollContent td,
tbody.scrollContent tr:hover td {
  background: rgb(245, 245, 245);
  color: rgb(52 69 180);
  cursor: pointer;
  .cancelled-deals {
    color: rgb(52 69 180);
  }
}

tbody.scrollContent td,
tbody.scrollContent tr:nth-child(even):hover td {
  background: rgb(226, 226, 226);
  color: rgb(52 69 180);
  cursor: pointer;
  .cancelled-deals {
    color: rgb(52 69 180);
  }
}

.warn-color {
    color: red;
}

tbody.scrollContent tr.tracked-entry-row td {
  background: #fff;
  color: crimson;
}

tbody.scrollContent tr:nth-child(even).tracked-entry-row td {
  background: #eee;
  color: crimson;
}

.th-btn {
  cursor: pointer;
  background-color: transparent;
  transition: all linear 150ms;
}
.th-btn:hover {
  background-color: rgba(255, 255, 255, 0.075);
}